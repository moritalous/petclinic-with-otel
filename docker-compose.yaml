version: '3'

services:

  nginx:
    # image: nginx:1.18
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/opentelemetry_module.conf:/etc/nginx/conf.d/opentelemetry_module.conf
    depends_on:
      - tomcat

  tomcat:
    # image: tomcat:9.0.68-jdk11-corretto
    build:
      context: tomcat
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres/petclinic
      - spring-boot.run.profiles=postgres
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/opentelemetry-javaagent.jar
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_RESOURCE_ATTRIBUTES=service.name=petclinic
      - OTEL_IMR_EXPORT_INTERVAL=10000
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://opentelemetry-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
      # - otel.javaagent.debug=true
    depends_on:
      - postgres
      - opentelemetry-collector

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=petclinic
      - POSTGRES_USER=petclinic
      - POSTGRES_DB=petclinic
    ports:
      - "5432:5432"

  opentelemetry-collector:
    image: otel/opentelemetry-collector
    container_name: otelcol
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    ports:
      - "4317:4317"
    volumes:
      - ./opentelemetry-collector/otel-config.yaml:/otel-config.yaml
    command: ["--config", "otel-config.yaml"]
